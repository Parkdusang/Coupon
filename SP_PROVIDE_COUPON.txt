CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_PROVIDE_COUPON`(
IN IN_USER_SEQ INT,
IN IN_COUPON_SEQ INT
)
BEGIN
		/* 가격을 변경할 변수를 선언한다. */
		DECLARE COUPON_CODE_SEQ INT;
		DECLARE RESULT INT;
		/* 만약 SQL에러라면 ROLLBACK 처리한다.*/
		DECLARE exit handler for SQLEXCEPTION
		  BEGIN
			ROLLBACK;
			SET RESULT = CONCAT('UPDATE tb_coupon_code_',IN_COUPON_SEQ);
	        SELECT -1;
		END;


    START TRANSACTION;

		SELECT COUPON_SEQ INTO RESULT from tb_coupon_user_info A where USER_SEQ = IN_USER_SEQ AND COUPON_SEQ = IN_COUPON_SEQ;
		IF RESULT IS NULL THEN

            SELECT COUNT into COUPON_CODE_SEQ  FROM tb_coupon_count WHERE COUPON_SEQ = IN_COUPON_SEQ FOR UPDATE;
            SET COUPON_CODE_SEQ = COUPON_CODE_SEQ + 1;

			IF COUPON_CODE_SEQ >= (SELECT COUPON_COUNT FROM tb_coupon_info where COUPON_SEQ = IN_COUPON_SEQ) THEN
				SET RESULT = -3;
			ELSE
				SET @GetName = CONCAT('UPDATE tb_coupon_code_',IN_COUPON_SEQ,' SET TARGET_USER_ID = ',IN_USER_SEQ,' WHERE SEQ = ',COUPON_CODE_SEQ);
				PREPARE stmt FROM @GetName;
				EXECUTE stmt;

				INSERT INTO tb_coupon_user_info (USER_SEQ,COUPON_SEQ,COUPON_CODE_SEQ,IS_USED) VALUES (IN_USER_SEQ,IN_COUPON_SEQ,COUPON_CODE_SEQ,'N');

				UPDATE tb_coupon_count SET COUNT = COUPON_CODE_SEQ WHERE COUPON_SEQ = IN_COUPON_SEQ;
				SET RESULT = COUPON_CODE_SEQ;
            END IF;

		ELSE
			# 이미 등록된 값.
			SET RESULT = -2;
		END IF;
    COMMIT;
	SELECT RESULT;
END
